// <auto-generated />
using System;
using MagicVillageAPI.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVillageAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVillageAPI.Models.Village", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MetrosCuadros")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocupantes")
                        .HasColumnType("int");

                    b.Property<double>("Tarifa")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Villages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Detalle = "Detalle de la Villa..",
                            FechaActualizacion = new DateTime(2023, 7, 14, 13, 7, 35, 647, DateTimeKind.Local).AddTicks(6560),
                            FechaCreacion = new DateTime(2023, 7, 14, 13, 7, 35, 647, DateTimeKind.Local).AddTicks(6550),
                            ImagenUrl = "",
                            MetrosCuadros = 50,
                            Nombre = "Villa Real",
                            Ocupantes = 5,
                            Tarifa = 200.0
                        },
                        new
                        {
                            Id = 2,
                            Detalle = "Detalle de la Villa..",
                            FechaActualizacion = new DateTime(2023, 7, 14, 13, 7, 35, 647, DateTimeKind.Local).AddTicks(6562),
                            FechaCreacion = new DateTime(2023, 7, 14, 13, 7, 35, 647, DateTimeKind.Local).AddTicks(6561),
                            ImagenUrl = "",
                            MetrosCuadros = 40,
                            Nombre = "Premium vista a la piscina",
                            Ocupantes = 4,
                            Tarifa = 150.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
